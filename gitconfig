[ui]
	color = auto
[color]
	ui = auto
[alias]
	st = status -s
	ci = commit
	co = checkout
	track = branch --track
	amend = commit --amend
	files = diff-tree --no-commit-id --name-only
	review = log -p
	lg = log --graph --oneline --decorate --date=short --pretty='%C(auto)%h %C(red)%ad %C(auto,cyan)%aN%C(auto)%d %Creset%s'
	merges = log --graph --oneline --decorate --date=short --pretty='%C(auto)%h %C(red)%ad %C(auto,cyan)%>(17)%aN %C(auto)%d %s' --first-parent
	unchanged = update-index --assume-unchanged
	each = "!f() { find . -name .git -type d | grep -v .direnv | sed s,/.git,, | xargs -P10 -I{} git -C {} $1; }; f"
	ctags = !.git/hooks/ctags
	copr = "!f() { git fetch -fu origin refs/pull/$1/head:pr-$1; git checkout pr-$1; } ; f"
	prunepr = "!git for-each-ref refs/heads/pr-* --format='%(refname:short)' | while read ref ; do git branch -D $ref ; done"
	cp = cherry-pick --ff
	ff = merge --ff-only
[user]
	name = Chris Flipse
	email = cflipse@gmail.com
[core]
	editor = vim
	excludesfile = /home/flip/.gitignore
	attributesfile = /home/flip/.gitattributes
[rerere]
	enabled = 1
[rebase]
	autosquash = true
[push]
	default = simple
[include]
	path = .gitconfig.local
[init]
	templatedir = ~/.git_template
	defaultBranch = main
[credential]
	helper = cache
[commit]
	verbose = true
[pull]
	ff = only
[diff "rspec"]
  xfuncname = "^[ \t]*((RSpec|describe|context|it|before|after|around|feature|scenario)[ \t].*)$"
[includeIf "gitdir:~/do/"]
  path = ~/do/.gitconfig
[fetch]
	prune = true
