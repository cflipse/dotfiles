# remap the prefix key to ctrl-s
set -g prefix 'C-s'
unbind C-b
#bind C-a send-prefix   # ctrl-a twice to send to the internal app

#set -g default-terminal "screen-256color"
#set -g terminal-overrides 'xterm:colors=256'

# enable mouse scrolling
#set -g mode-mouse off

# reduce delay time
set -s escape-time 1

# make windows 1-based; makes keyboard shortcuts not suck
set -g base-index 1
setw -g pane-base-index 1

##### Environment variables #####
# Copy environment variables into new shells (see docs for the basic set
# of variables, but included is SSH_AGENT_PID, which will help keep
# shells created inside tmux from asking you for your SSH key's
# passphrase ALL. THE. TIME.
set -g update-environment -r

# more interesting keyboard shortcuts
bind c new-window -c '#{pane_current_path}'
bind | split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resizing
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# smart pane switching with awareness of vim splits - see vim-tmux-navigator
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
#bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l"

# Send the clear screen
bind C-l send-keys 'C-l'



# Just click it
#set-option -g mouse-select-pane on
#set-option -g mouse-select-window on
#set-option -g mouse-resize-pane on


# No mouse for you!
# (Note: turning on mouse support seems to make it impossible to use the
# mouse to copy text into the system clipboard. Surely there's a way
# around this if I ever feel like shaving that yak. -JW)
#setw -g mode-mouse off

# Use vi-style navigation in Copy mode (which is also scrollback mode)
set -g mode-keys vi

# Coloring
set  -g status-fg white
set  -g status-bg black

set -g window-status-fg cyan
set -g window-status-bg default
set -g window-status-attr dim

set -g window-status-current-fg white
set -g window-status-current-bg red
set -g window-status-current-attr bright

set -g message-fg white
set -g message-bg black
set -g message-attr bright


# history
set -g history-limit 10000

# Copy mode stuffs
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
bind -t vi-copy 'v' begin-selection
#bind -t vi-copy 'y' copy-selection
bind -t vi-copy 'y' copy-pipe 'xclip -in -selection clipboard'

# Interact with the system clipboard
#unbind C-c

# Renumber windows
bind m command-prompt -p "move window to:"  "move-window -t '%%'"

# Monitor windows for activity
setw -g monitor-activity on
set -g visual-activity on

#bind C-p run-shell "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer"
#bind C-y run-shell "tmux show-buffer | xclip -sel clip -i"

bind C-p run-shell "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"
bind C-y run-shell "tmux show-buffer | xclip -i -sel clipboard"

set-option -g default-terminal "screen-256color"
source-file "/usr/share/powerline/bindings/tmux/powerline.conf"
