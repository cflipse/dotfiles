# vim syntax=bash

[[ ":$PATH:" != *":${HOME}/bin:"* ]] && PATH=${HOME}/bin:${PATH}
[[ ":$PATH:" != *":${HOME}/.local/bin:"* ]] && PATH=${HOME}/.local/bin:${PATH}

if [ -f /usr/lib/chromium-browser/chromedriver ]; then
  PATH=${PATH}:/usr/lib/chromium-browser
fi

if hash fdfind 2> /dev/null ; then
  export  FZF_DEFAULT_COMMAND='fdfind --type f'
fi

export PATH

export EDITOR=vim

# Convice libreadline based tools to give me vi things
set editing-mode vi

# show current index state
cyan=$(tput setaf 6)
red=$(tput setaf 1)
blue=$(tput setaf 4)
reset=$(tput sgr0)
bold=$(tput bold)
dim=$(tput dim)

PROMPT_HOST="\[$cyan\]\u@\h\[$reset\]"
PROMPT_DIR="\[$blue$bold\]\w\[$reset\]"

export GIT_PS1_SHOWDIRTYSTATE=true
export GIT_PS1_SHOWCOLORHINTS=true
export PROMPT_COMMAND='__git_ps1 "${PROMPT_HOST}:${PROMPT_DIR}" "\n\[$red\]\j\[$reset\] \\\$ "'

# Avoid duplicates
export HISTCONTROL=ignoredups:erasedups
# When the shell exits, append to the history file instead of overwriting it
shopt -s histappend

# After each command, append to the history file and reread it
# export PROMPT_COMMAND="${PROMPT_COMMAND:+$PROMPT_COMMAND$'\n'}history -a; history -c; history -r"


# TMATE Functions
TMATE_PAIR_NAME="$(whoami)-pair"
TMATE_SOCKET_LOCATION="/tmp/tmate-pair.sock"
TMATE_TMUX_SESSION="/tmp/tmate-tmux-session"

# Get current tmate connection url
tmate-url() {
  url="$(tmate -S $TMATE_SOCKET_LOCATION display -p '#{tmate_ssh}')"
  echo "$url" | tr -d '\n' | xsel -i -p
  echo "Copied tmate url for $TMATE_PAIR_NAME:"
  echo "$url"
}

# Start a new tmate pair session if one doesn't already exist
# If creating a new session, the first argument can be an existing TMUX session to connect to automatically
tmate-pair() {
  if [ ! -e "$TMATE_SOCKET_LOCATION" ]; then
    tmate -S "$TMATE_SOCKET_LOCATION" -f "$HOME/.tmate.conf" new-session -d -s "$TMATE_PAIR_NAME"

    while [ -z "$url" ]; do
      url="$(tmate -S $TMATE_SOCKET_LOCATION display -p '#{tmate_ssh}')"
    done
    tmate-url
    sleep 1

    if [ -n "$1" ]; then
      echo $1 > $TMATE_TMUX_SESSION
      tmate -S "$TMATE_SOCKET_LOCATION" send -t "$TMATE_PAIR_NAME" "TMUX='' tmux attach-session -t $1" ENTER
    fi
  fi
  tmate -S "$TMATE_SOCKET_LOCATION" attach-session -t "$TMATE_PAIR_NAME"
}

# Close the pair because security
tmate-unpair() {
  if [ -e "$TMATE_SOCKET_LOCATION" ]; then
    if [ -e "$TMATE_SOCKET_LOCATION" ]; then
      tmux detach -s $(cat $TMATE_TMUX_SESSION)
      rm -f $TMATE_TMUX_SESSION
    fi

    tmate -S "$TMATE_SOCKET_LOCATION" kill-session -t "$TMATE_PAIR_NAME"
    echo "Killed session $TMATE_PAIR_NAME"
  else
    echo "Session already killed"
  fi
}

set-text-zoom() {
  gsettings set org.gnome.desktop.interface text-scaling-factor "$1";
}

unlock-bw() {
  export BW_SESSION=$(bw unlock --raw)
}

light() {
  export TERM_PROFILE='light'
}

dark() {
  export TERM_PROFILE='dark'
}

